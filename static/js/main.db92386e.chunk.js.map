{"version":3,"sources":["../../src/constants.js","../../src/utils.js","App.js","../../src/index.js","constants.js","index.js"],"names":["DEFAULT_BREAKPOINTS","xs","sm","md","lg","xl","getScreenSize","breakpoints","width","allSizes","inArray","point","key","size","below","App","window","innerHeight","innerWidth","useState","setWidth","height","setHeight","customBreakpoints","setCustomBreakpoints","handleWindowWidth","useEffect","appBreakpoints","orientation","screenSize","screenSizes","defineBreakpoints","useResponsive","href","src","onEdit","updated_src","ReactDOM","render","document","getElementById"],"mappings":"gMAAaA,EAAsB,CACjCC,GADiC,EAEjCC,GAFiC,IAGjCC,GAHiC,IAIjCC,GAJiC,KAKjCC,GAAI,MCLOC,EAAgB,SAACC,EAAaC,EAAOC,GAChD,IAAMC,EAAN,GACA,IAAK,IAAL,OAA+B,CAC7B,IAAMC,EAAQ,CACZC,IADY,EAEZC,KAAMN,EAAY,IAEpBG,UAGF,IAAMI,EAAQJ,EAAA,QAAe,gCAE7B,SACE,EAGcI,EAAMA,SAhBuC,Q,uDCgChDC,EA1BH,WAAO,IAAD,ECFX,WAAyB,MACMC,QADN,GACtBC,EADsB,cACTC,EADS,eAEJC,mBAFI,GAEvBX,EAFuB,KAEhBY,EAFgB,OAGFD,mBAHE,GAGvBE,EAHuB,KAGfC,EAHe,OAIoBH,qBAA3CI,EAJuB,KAIJC,EAJI,KAMxBC,EAAoB,WAAM,aACtBP,EADsB,aACVD,EADU,cAE9BG,KACAE,MAEFI,qBAAU,WAER,OADAV,oCACO,WACLA,0CAHJU,IAOA,IAIMC,EAAiBJ,GAAvB,EAKA,MAAO,CACLf,MADK,EAELa,OAFK,EAGLO,YALkBpB,gBAApB,WAMEqB,WARiBvB,EAAcqB,EAAjC,GASEG,YARkBxB,EAAcqB,EAAgBnB,GAAlD,GASEuB,kBAfwB,SAACR,GACzBC,MAeAjB,YAAaoB,GD/BoEK,GAA3ExB,EADQ,EACRA,MAAOa,EADC,EACDA,OAAQO,EADP,EACOA,YAAaC,EADpB,EACoBA,WAAYE,EADhC,EACgCA,kBAAmBxB,EADnD,EACmDA,YAMnE,OACE,6BACE,kBAAC,IAAD,CAAc0B,KAAK,wDACnB,kBAAC,IAAD,KEhBsB,iTFiBtB,6BACA,iDACA,kBAAC,IAAD,CAAWC,IAAK3B,EAAa4B,OAVd,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACpBL,EAAkBK,MAUhB,6BACA,mEACA,4BACE,6CAAe5B,IACf,8CAAgBa,IAChB,mDAAqBO,IACrB,kDAAoBC,OGtB5BQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.db92386e.chunk.js","sourcesContent":["export const DEFAULT_BREAKPOINTS = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n}\n","export const getScreenSize = (breakpoints, width, allSizes) => {\n  const inArray = []\n  for (const key in breakpoints) {\n    const point = {\n      key,\n      size: breakpoints[key]\n    }\n    inArray.push(point)\n  }\n\n  const below = inArray.filter(({ size }) => size <= width)\n\n  if (allSizes) {\n    return below\n  }\n\n  const { key } = below[below.length - 1]\n\n  return key\n}\n","import React from 'react'\nimport { useResponsive } from 'use-responsive-react'\nimport GithubCorner from 'react-github-corner';\nimport ReactJson from 'react-json-view'\nimport ReactMarkdown from 'react-markdown'\nimport { HEADER_MARKDOWN } from './constants';\nconst App = () => {\n  const { width, height, orientation, screenSize, defineBreakpoints, breakpoints } = useResponsive();\n\n  const handleEdit = ({ updated_src }) => {\n    defineBreakpoints(updated_src)\n  }\n\n  return (\n    <div>\n      <GithubCorner href=\"https://github.com/maximegouin/use-responsive-react\" />\n      <ReactMarkdown>{HEADER_MARKDOWN}</ReactMarkdown>\n      <hr />\n      <h3>defineBreakpoints</h3>\n      <ReactJson src={breakpoints} onEdit={handleEdit} />\n      <hr />\n      <h3>Resize screen to get dynamic values</h3>\n      <ul>\n        <li>{`width: ${width}`}</li>\n        <li>{`height: ${height}`}</li>\n        <li>{`orientation: ${orientation}`}</li>\n        <li>{`screenSize: ${screenSize}`}</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import { useState, useEffect } from 'react'\nimport { DEFAULT_BREAKPOINTS } from './constants'\nimport { getScreenSize } from './utils'\n\nexport function useResponsive() {\n  const { innerHeight, innerWidth } = window || {}\n  const [width, setWidth] = useState(innerWidth)\n  const [height, setHeight] = useState(innerHeight)\n  const [customBreakpoints, setCustomBreakpoints] = useState()\n\n  const handleWindowWidth = () => {\n    const { innerWidth, innerHeight } = window\n    setWidth(innerWidth)\n    setHeight(innerHeight)\n  }\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowWidth)\n    return () => {\n      window.removeEventListener('resize', handleWindowWidth)\n    }\n  }, [])\n\n  const defineBreakpoints = (customBreakpoints) => {\n    setCustomBreakpoints(customBreakpoints)\n  }\n\n  const appBreakpoints = customBreakpoints || DEFAULT_BREAKPOINTS\n  const screenSize = getScreenSize(appBreakpoints, width)\n  const screenSizes = getScreenSize(appBreakpoints, width, true)\n  const orientation = width > height ? 'landscape' : 'portrait'\n\n  return {\n    width,\n    height,\n    orientation,\n    screenSize,\n    screenSizes,\n    defineBreakpoints,\n    breakpoints: appBreakpoints\n  }\n}\n","export const HEADER_MARKDOWN = `\n# use-responsive-react\n\n> React hook for responsive design\n\n[![NPM](https://img.shields.io/npm/v/use-responsive-react.svg)](https://www.npmjs.com/package/use-responsive-react) [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n`;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}